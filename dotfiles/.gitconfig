[user]
	name = devin-efendy
	email = devinefendy.dev@gmail.com

[color]
	advice = true
	branch = true
	diff = true
	grep = true
	interactive = true
	pager = true
	push = true
	remote = true
	showBranch = true
	status = true
	transport = true
	ui = true

    [color]
	advice = true
	branch = true
	diff = true
	grep = true
	interactive = true
	pager = true
	push = true
	remote = true
	showBranch = true
	status = true
	transport = true
	ui = true

[color "branch"]
	current = 14
	local = 10
	remote = 9
	upstream = 208
	plain = 15

[color "decorate"]
	branch = 2 bold
	remoteBranch = 1 bold
	tag = 3 bold
	stash = 5 bold
	HEAD = 6 bold
	grafted = 4 bold

[color "diff"]
	context = 15
	meta = 4 bold reverse
	frag = 3 bold reverse
	func = 166 bold reverse
	commit = 3 bold
	old = 9
	new = 10
	oldMoved = 8
	newMoved = 14
	oldMovedAlternative = 8
	newMovedAlternative = 14
	whitespace = 1 reverse

[color "diff-highlight"]
	oldHighlight = reverse
	oldReset = noreverse

[color "interactive"]
	prompt = 4 bold
	header = 15 bold
	help = 15
	error = 1

[color "push"]
	error = 1 bold

[color "transport"]
	rejected = 1 bold

[color "remote"]
	hint = 5 bold
	warning = 3 bold
	success = 2 bold
	error = 1 bold

[color "status"]
	header = 15 bold
	added = 14 bold
	changed = 11 bold
	untracked = 9 bold
	branch = 2 bold
	nobranch = 3 bold
	localBranch = 2 bold
	remoteBranch = 1 bold
	unmerged = 9 bold reverse

[format]
	pretty = lf

[pretty]
	lo  = tformat:%C(auto)%h%C(reset)%C(auto)%d%C(reset) %s %C(italic blue)%ad%C(reset) %C(241)%aN%C(reset)
	lc  =  format:%C(auto)%h%C(reset) %C(white)-%C(reset) %C(italic blue)%ad%C(reset) %C(italic cyan)(%ar)%C(reset)%C(auto)%d%C(reset)%n %C(white)⤷%C(reset) %s %C(241)- %aN <%aE>%C(reset)%n
	lt  =  format:%C(auto)%h%C(reset) %C(white)-%C(reset) %C(italic blue)%ad%C(reset) %C(italic cyan)(%ar)%C(reset)%C(auto)%d%C(reset)%n %C(white)⤷%C(reset) %s %C(241)- %aN <%aE>%C(reset)%n%w(0,7,7)%+(trailers:only,unfold)
	lf  =  format:%C(auto)%h%C(reset)%C(auto)%d%C(reset)   %C(italic 239)[P: %p] [T: %t]%C(reset)%n%C(white)Author:%C(reset)   %aN %C(241)<%aE>%C(reset)%n          %C(italic blue)%ad%C(reset) %C(italic cyan)(%ar)%C(reset)%n%C(white)Commit:%C(reset)   %cN %C(241)<%cE>%C(reset)   %C(italic 239)[GPG: %G?% GK]%C(reset)%n          %C(italic blue)%cd%C(reset) %C(italic cyan)(%cr)%C(reset)%w(0,4,4)%n%n%C(bold)%s%C(reset)%n%n%-b%n%n%-N%n
	rlo = tformat:%C(auto)%h%C(reset) %C(bold yellow)(%C(magenta)%gd%C(bold yellow))%C(reset)%C(auto)%d%C(reset) %gs %C(italic blue)%ad%C(reset) %C(241)%aN%C(reset)
	rlc =  format:%C(auto)%h%C(reset) %C(white)-%C(reset) %C(italic blue)%ad%C(reset) %C(italic cyan)(%ar)%C(reset)%C(auto)%d%C(reset)%n %C(white)⤷%C(reset) %s %C(241)- %aN <%aE>%C(reset)%n %C(white)⤷%C(reset) %C(bold yellow)(%C(magenta)%gd%C(bold yellow))%C(reset) %gs %C(241)- %gN <%gE>%C(reset)%n
	rlt =  format:%C(auto)%h%C(reset) %C(white)-%C(reset) %C(italic blue)%ad%C(reset) %C(italic cyan)(%ar)%C(reset)%C(auto)%d%C(reset)%n %C(white)⤷%C(reset) %s %C(241)- %aN <%aE>%C(reset)%n %C(white)⤷%C(reset) %C(bold yellow)(%C(magenta)%gd%C(bold yellow))%C(reset) %gs %C(241)- %gN <%gE>%C(reset)%n%w(0,7,7)%+(trailers:only,unfold)
	rlf =  format:%C(auto)%h%C(reset) %C(bold yellow)(%C(magenta)%gd%C(bold yellow))%C(reset)%C(auto)%d%C(reset)   %C(italic 239)[P: %p] [T: %t]%C(reset)%n%C(white)Author:%C(reset)   %aN %C(241)<%aE>%C(reset)%n          %C(italic blue)%ad%C(reset) %C(italic cyan)(%ar)%C(reset)%n%C(white)Commit:%C(reset)   %cN %C(241)<%cE>%C(reset)   %C(italic 239)[GPG: %G?% GK]%C(reset)%n          %C(italic blue)%cd%C(reset) %C(italic cyan)(%cr)%C(reset)%n%C(white)Reflog:%C(reset)   %gN %C(241)<%gE>%C(reset)%n          %C(italic)%gs%C(reset)%w(0,4,4)%n%n%C(bold)%s%C(reset)%n%n%-b%n%n%-N%n

[alias]
	ec = "!f() { [ -f \"${XDG_CONFIG_HOME:-$HOME/.config}\"/dotfiles.conf ] && . \"${XDG_CONFIG_HOME:-$HOME/.config}\"/dotfiles.conf; git --git-dir=\"$dotfiles_dir\" config --global --edit; }; f"
	ecl = config --edit

	# log, current branch
	l  = log --pretty=lc --graph
	lo = log --pretty=lo --graph --date=human
	ls = log --pretty=lo --graph --date=human --simplify-by-decoration
	lf = log --pretty=lf --graph
	ld = log --pretty=lf --graph --cc --stat
	lp = log --pretty=lf --graph --cc --patch

	# log, all branches+tags on all remotes
	la  = log --pretty=lc --graph                                       --all
	lao = log --pretty=lo --graph --date=human                          --all
	las = log --pretty=lo --graph --date=human --simplify-by-decoration --all
	laf = log --pretty=lf --graph                                       --all
	lad = log --pretty=lf --graph --cc --stat                           --all
	lap = log --pretty=lf --graph --cc --patch                          --all

	# log, all branches+tags on remotes 'origin' and 'upstream'
	lg  = log --pretty=lc --graph                                       --branches=* --tags=* --remotes=origin --remotes=upstream
	lgo = log --pretty=lo --graph --date=human                          --branches=* --tags=* --remotes=origin --remotes=upstream
	lgs = log --pretty=lo --graph --date=human --simplify-by-decoration --branches=* --tags=* --remotes=origin --remotes=upstream
	lgf = log --pretty=lf --graph                                       --branches=* --tags=* --remotes=origin --remotes=upstream
	lgd = log --pretty=lf --graph --cc --stat                           --branches=* --tags=* --remotes=origin --remotes=upstream
	lgp = log --pretty=lf --graph --cc --patch                          --branches=* --tags=* --remotes=origin --remotes=upstream

	# reflog
	rl  = reflog --pretty=rlc
	rlo = reflog --pretty=rlo
	rlf = reflog --pretty=rlf
	rld = reflog --pretty=rlf --stat

	# stash
	sl  = stash list --pretty=rlc
	slo = stash list --pretty=rlo
	slf = stash list --pretty=rlf
	sld = stash list --pretty=rlf --stat
	sls = stash show --patch

	# inspection
	sh = show --stat --cc --summary --patch
	grep = grep -Ii

	# diff
	d = diff -c
	ds = diff --find-renames --stat --cc -c
	dc = diff --cached -c
	dl = diff --cached -c HEAD~
	du = diff --cached -c @{u}
	dr = "!f() { git diff -c ${1:-HEAD}~..${1:-HEAD}; }; f"

	# status
	s = status
	si = status --ignored
	sa = status --ignored --untracked-files

	# index
	a = add
	aa = add --all
	au = add --update
	ai = add --interactive
	ap = add --patch
	an = add --intent-to-add
	u = reset HEAD --
	up = reset --patch HEAD --

	# commit
	c = commit --verbose
	cn = commit --verbose --no-verify
	cc = commit --verbose -c
	cf = commit --verbose --fixup
	cs = commit --verbose --squash
	ca = commit --verbose --amend
	can = commit --verbose --amend --no-edit

	# checkout
	co = checkout
	com = checkout master --
	cod = checkout develop --
	cob = checkout -b

	# branch
	b = branch
	bc = branch --contains
	bd = branch --delete --force
	bl = branch -vv
	bla = branch --all -vv

	# tag
	t = tag
	tc = tag --contains
	td = tag --delete

	# network (in)
	cl = clone
	p = pull
	f = fetch --tags
	ff = fetch --force --tags
	fa = fetch --all --tags
	fp = fetch --prune --tags
	ffp = fetch --prune --force --tags
	fap = fetch --prune --all --tags
	pfa = "!f() { git remote | xargs -I@ -P0 git fetch --tags \"$@\" @; }; f"

	# network (out)
	pu = push
	pun = push --no-verify
	puf = push --force-with-lease
	puff = push --force

	# submodule
	sub = submodule
	subu = submodule update --init --recursive

	# merge
	m = merge
	ma = merge --abort
	mc = merge --continue
	mff = merge --ff-only
	mnc = "!f() { git merge --no-commit --no-ff \"$@\"; EC=$?; git merge --abort; exit $EC; }; f"

	# rebase
	r = rebase
	ra = rebase --abort
	rc = rebase --continue
	rq = rebase --quit
	rs = rebase --skip
	ret = rebase --edit-todo
	rsh = rebase --show-current-patch

	# interactive rebase
	ri = rebase --interactive
	riu = rebase --interactive @{u}
	rim = rebase --interactive master
	rid = rebase --interactive develop

	# cherry-pick
	cp = cherry-pick
	cpa = cherry-pick --abort
	cpc = cherry-pick --continue
	cpq = cherry-pick --quit

	# revert
	rv = revert
	rva = revert --abort
	rvc = revert --continue
	rvq = revert --quit

	# reset
	re = reset
	res = reset --soft
	reh = reset --hard

	# tools
	mt = mergetool
	dt = difftool

	# w-commands
	which = branch --all --contains
	which-tag = describe --always --contains
	who = shortlog --summary --numbered --no-merges
	whoami = "!echo $(git config --get user.name) '<'$(git config --get user.email)'>'"
	watch = "!f() { watch -ctn 2 git \"${@:-l}\"; }; f"